//exep handler
loadi(2, 15);
loadi(3, 16);
//diskfreelist
loadi(61,2);
//expos library
loadi(63,13);
loadi(64,14);
//init
loadi(65,7);
loadi(66,8);

//timer
loadi(4, 17);
loadi(5, 18);
//disk interrupt
loadi(6,19);
loadi(7,20);
//console
loadi(8,21);
loadi(9,22);

//mod-0
loadi(40,53);
loadi(41,54);
//mod1
loadi(42,55);
loadi(43,56);
//mod2
loadi(44,57);
loadi(45,58);
//mod-4
loadi(48,61);
loadi(49,62);
//mod-5
loadi(50,63);
loadi(51,64);

//int6
loadi(14,27);
loadi(15,28);
//int7
loadi(16,29);
loadi(17,30);
//int-8
loadi(18,31);
loadi(19,32);
//int9
loadi(20,33);
loadi(21,34);
//int-10
loadi(22,35);
loadi(23,36);
//int-11
loadi(24,37);
loadi(25,38);
//int-13
loadi(28,41);
loadi(29,42);
//int-14
loadi(30,43);
loadi(31,44);
//int-15
loadi(32,45);
loadi(33,46);
//INODE TABLE
loadi(59,3); 
loadi(60,4);

[TERMINAL_STATUS_TABLE] = 0;
[DISK_STATUS_TABLE]=0;

//init
PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 27] = 80;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 31] = 10;
[76*512] = [65 * 512 + 1];
[DISK_MAP_TABLE+14]=7;
[DISK_MAP_TABLE+15]=8;

alias i R0;


i=496;
while(i<512) do //last 16 words of userpage as per-process table initialization
    [80*512+i]=-1; 
    i=i+1;
endwhile;

i=0;
while(i<32) do // initialization of semaphore table
    [SEMAPHORE_TABLE+4*i]=-1;
    [SEMAPHORE_TABLE+4*i+1]=0;
    i=i+1;
endwhile;

i = 2;
while (i <= 15)do
   [PROCESS_TABLE +16*i +1]=-1;
   [PROCESS_TABLE + 16*i + 4 ] = TERMINATED;
   i =  i + 1 ;
endwhile;

i=0;
while(i<83) do 
    [MEMORY_FREE_LIST + i]=1;
    i=i+1;
endwhile;

while(i<128) do
    [MEMORY_FREE_LIST + i]=0;
    i=i+1;
endwhile;

[SYSTEM_STATUS_TABLE+3]=0;  
[SYSTEM_STATUS_TABLE+2]=45; 
return;
